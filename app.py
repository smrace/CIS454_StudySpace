from flask import Flask, render_template, url_for, flash, redirect 
from forms import RegistrationForm, LoginForm
app = Flask(__name__)

#secret key that prevents things like cookies from being modified
#generated by hand
app.config['SECRET_KEY'] = '2314gea02d1a4e9ca461e3ca54290a9'


@app.route("/")
@app.route("/home")
def home():
    return render_template('mainPage.html')

#Look at if statement for when redirecting after reserving room
@app.route("/createAccount", methods=['GET', 'POST'])
def createAccount():
    form = RegistrationForm()
    if form.validate_on_submit():
        flash(f'Account created for {form.username.data}!', 'success')
        return redirect(url_for('home'))
    return render_template('createAccount.html', title='Create Account', form=form)

#see forms.py for more info on LoginForm() and RegistrationForm()
@app.route("/login", methods=['GET', 'POST'])
def login():
    form = LoginForm()
    if form.validate_on_submit():
        if form.email.data == 'admin@blog.com' and form.password.data == 'password':
            flash('You have been successfully logged in!', 'success')
            return redirect(url_for('home'))
        else:
            flash('Login Unsuccessful. Please check username and password', 'danger')
    return render_template('login.html', title='Login', form=form)

@app.route("/mainPage")
def mainPage():
    return render_template('mainPage.html', title='Main Page')

@app.route("/about")
def about():
    return render_template('about.html', title='about')

@app.route("/findGroup")
def findGroup():
    return render_template('findGroup.html', account=accounts, title='Find Group')

#Look into changing the color of the whole webpage
    #This will be in main.css


 #student profile class. ideally this would save itself between user uses but idk how to do that
class StudentProfile:
    lst = []
    
   
    def __init__(self,subject,partner,name,email):
        self.s = subject
        self.p = partner
        self.n = name
        self.e = email
        
    
        if(partner == True):
            self.lst.append(self.n)
            self.lst.append(self.s)
    def chgsbj(self, sub):
        subject=sub
        self.s =subject
    

accounts = [ StudentProfile("science",True,'John Doe', 'johndoe@syr.edu'),
                    StudentProfile("math",True,'Jane Doe', 'janedoe@syr.edu'),
                    StudentProfile("statistics",True,'Grumpy Gus', 'ggus@syr.edu')
                    ]

if __name__ == '__main__':
    app.run(debug = True)

